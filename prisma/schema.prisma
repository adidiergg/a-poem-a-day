generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "relationJoins"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto, uuid_ossp(map: "uuid-ossp", schema: "xata")]
}

model Poems {
  title           String
  content         String
  author          String
  views           Int               @default(0)
  xata_version    Int               @default(0)
  xata_createdat  DateTime          @default(now()) @db.Timestamptz(6)
  xata_updatedat  DateTime          @default(now()) @db.Timestamptz(6)
  xata_id         String            @unique(map: "Poem__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt       DateTime          @default(now())
  dailies         Dailies[]
  tags            PoemsTags[]
  posts           Recommendations[] @relation("Post")
  recommendations Recommendations[] @relation("Recommend")
}

model Tags {
  id             Int         @id @default(autoincrement())
  name           String
  xata_updatedat DateTime    @default(now()) @db.Timestamptz(6)
  xata_id        String      @unique(map: "Tags__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int         @default(0)
  xata_createdat DateTime    @default(now()) @db.Timestamptz(6)
  poems          PoemsTags[]
}

model Dailies {
  day            Int      @id
  poemId         String   @db.Uuid
  xata_id        String   @unique(map: "Dailies__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  poem           Poems    @relation(fields: [poemId], references: [id])
}

model PoemsTags {
  tagId          Int
  poemId         String   @db.Uuid
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "PoemsTags__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  poem           Poems    @relation(fields: [poemId], references: [id])
  tag            Tags     @relation(fields: [tagId], references: [id])

  @@id([poemId, tagId])
}

model Recommendations {
  postId          String   @db.Uuid
  postRecommendId String   @db.Uuid
  score           Float
  xata_id         String   @unique(map: "Recommendations__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version    Int      @default(0)
  xata_createdat  DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat  DateTime @default(now()) @db.Timestamptz(6)
  post            Poems    @relation("Post", fields: [postId], references: [id])
  poemRecommend   Poems    @relation("Recommend", fields: [postRecommendId], references: [id])

  @@id([postId, postRecommendId])
}
